package com.uslotter;

import java.io.File;

import com.uslotter.R;
import com.uslotter.util.DialogUtil;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.ContentResolver;
import android.content.DialogInterface;
import android.content.Intent;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.provider.MediaStore.MediaColumns;
import android.view.View;
import android.view.Window;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.Toast;

public class UslotteryRecord_pxhdActivity extends Activity{
	private Button btn_exit = null;
	private Button btn_save = null;
	private Spinner sp_pxhd = null;
	private Spinner sp_theme = null;
	private EditText et_remarks = null;
	private ImageView iv2= null;
	private ImageView iv_add = null;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.record2_pxhd);
		btn_exit = (Button)this.findViewById(R.id.record2_pxhd_back);
		btn_save = (Button)this.findViewById(R.id.record2_pxhd_save);
		sp_pxhd = (Spinner)this.findViewById(R.id.record2_pxhd_sp_pxdx);
		sp_theme = (Spinner)this.findViewById(R.id.record2_pxhd_sp_theme);
		et_remarks = (EditText)this.findViewById(R.id.record2_pxhd_et_remarks);
		iv_add = (ImageView)this.findViewById(R.id.record2_pxhd_iv_annex);
        iv2 = (ImageView)this.findViewById(R.id.record2_pxhd_iv2_annex);		
		iv2.setTag("");
        iv_add.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
				intent.addCategory(Intent.CATEGORY_OPENABLE);
				intent.setType("image/*");
				intent.putExtra("return-data", true);
				startActivityForResult(intent, 4);
				
			}
		});
        btn_exit.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				finish();
			}
		});
		btn_save.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				if(sp_theme.getSelectedItem().toString().trim().equals("")){
					DialogUtil.showDialog(UslotteryRecord_pxhdActivity.this, "请选择培训主题!");
					return;
				}
				if(et_remarks.getText().toString().trim().equals("")){
					DialogUtil.showDialog(UslotteryRecord_pxhdActivity.this, "请填写备注!");
					return;
				}
				if(iv2.getTag().toString().equals("")){
					DialogUtil.showDialog(UslotteryRecord_pxhdActivity.this, "没有附件!");
				}
				Intent intent = new Intent(UslotteryRecord_pxhdActivity.this,UslotteryRecord.class);
				intent.putExtra("theme", sp_theme.getSelectedItem().toString().trim());
				intent.putExtra("object",sp_pxhd.getSelectedItem().toString().trim());
				intent.putExtra("remarks",et_remarks.getText().toString().trim());
				intent.putExtra("path", iv2.getTag().toString().trim());
				UslotteryRecord_pxhdActivity.this.startActivity(intent);
			Toast.makeText(UslotteryRecord_pxhdActivity.this, sp_theme.getSelectedItem().toString()+"\n"+sp_pxhd.getSelectedItem().toString()+"\n"+et_remarks.getText().toString(), Toast.LENGTH_SHORT).show();
			}
		});
	}
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent intent) {
		 if (resultCode == RESULT_OK&&intent != null) {  
	       	  if (requestCode == 4) {  
		            	 Bundle bundle = intent.getExtras();
		            	 Uri originalUri = intent.getData();           
		            	 if (originalUri != null) {     
		            		 Bitmap bitMap = null;   
		            		 try {  
		            			 if(bitMap!=null)bitMap.recycle(); 
		            			 bitMap = null;                    
		            			 ContentResolver resolver = getContentResolver();
		            			 bitMap = MediaStore.Images.Media.getBitmap(resolver,originalUri); 
		            			 String[] proj = { MediaColumns.DATA };
		            			 Cursor cursor = managedQuery(originalUri, proj, null, null,  
		            					 null);                    // 按我个人理解 这个是获得用户选择的图片的索引值
		            			 int column_index = cursor.getColumnIndexOrThrow(MediaColumns.DATA); 
		          
		            			 // 将光标移至开头 ，这个很重要，不小心很容易引起越界           
		            			 cursor.moveToFirst();                     // 最后根据索引值获取图片路径  

		            			String path_fwyb = cursor.getString(column_index);
		            			 bitMap = Bitmap.createScaledBitmap(bitMap, 80, 80, false);
			            			
//		            			iv_fwyb = new ImageView(this);
//		            			iv_fwyb.setPadding(0, 0, 15, 0);
//			            		iv_fwyb.setLayoutParams(new LayoutParams(80, LayoutParams.FILL_PARENT));
//			            		
		            			// iv_fwyb = (ImageView) this.findViewById(R.id.record2_fwyb_iv);
			            		
		            			 iv2.setVisibility(View.VISIBLE);
		            			 iv2.setImageBitmap(bitMap);

		            			 iv2.setTag(path_fwyb);
		            		//	ll_fwyb.addView(iv_fwyb);
		            			 iv2.setOnClickListener(new View.OnClickListener() {
		            					@Override
		            					public void onClick(View v) {
		            						ImageView iv = (ImageView)v;
		            						Intent intent = new Intent();
		            					     intent.setAction(android.content.Intent.ACTION_VIEW);
		            					     intent.setDataAndType(Uri.fromFile(new File(iv.getTag().toString())), "image/*");
		            					     UslotteryRecord_pxhdActivity.this.startActivity(intent);
		            					}
		            				});
		            			 iv2.setOnLongClickListener(new View.OnLongClickListener() {
									
									@Override
									public boolean onLongClick(View v) {
										final ImageView iv = (ImageView)v;
										
										//delete photo
										AlertDialog.Builder builder = new Builder(UslotteryRecord_pxhdActivity.this);
										builder.setTitle("提示");
										builder.setMessage("确定删除此照片吗？");
										builder.setPositiveButton("确定", new DialogInterface.OnClickListener(){

											@Override
											public void onClick(
													DialogInterface dialog,
													int which) {
											//	Toast.makeText(UslotteryRecord.this, iv.getId()+"...", Toast.LENGTH_SHORT).show();
												//paths.remove(paths.get(iv.getId()));
											//	ll_fwyb.removeView(iv);
												iv2.setTag("");
												iv2.setVisibility(View.GONE);	
												dialog.dismiss();	
											}
									
										}
											);
										builder.setNegativeButton("取消", new DialogInterface.OnClickListener(){

											@Override
											public void onClick(
													DialogInterface dialog,
													int which) {
												
												dialog.dismiss();
											}
										});
										builder.create().show();
										return false;
									}
								});
		            		 }catch(Exception e){
		            			 e.printStackTrace();
		            		 }
		            	 }
		         	    }
	         }
		super.onActivityResult(requestCode, resultCode, intent);
	}
}